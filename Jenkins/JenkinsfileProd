pipeline {
    agent {
        label 'fire'
    }

    environment {
        WEBHOOK_URL_DISCORD = credentials('WEBHOOK_URL_DISCORD')
        DOCKER_USERNAME = credentials('DOCKER_USERNAME')
        DOCKER_PASSWORD = credentials('DOCKER_PASSWORD')
    }

    stages {
        stage('Unit Test'){
            agent {
                docker {
                    image 'golang:1.21.4-alpine3.18'
                    label 'fire'
                }
            }

            steps {
                sh 'GOCACHE=/tmp/ go test -v ./...'
            }   
        }

        stage('Build') {
            steps {
                echo "Building Apps"
                sh "docker build -t $DOCKER_USERNAME/fundhub-dashboard:${BUILD_NUMBER} ."
            }
        }

         stage('Push to Registry') {
            steps {
                script {
                    def approval // Define the approval variable

                    withCredentials([string(credentialsId: 'WEBHOOK_URL_DISCORD', variable: 'WEBHOOK_URL_DISCORD')]) {
                        script {
                            // def payloadMsg = '''
                            // {
                            //     "content": "Approval push to Registry",
                            //     "description": "Please continue fundhub-dashboard:${BUILD_NUMBER} push to Registry.",
                            //     "build_url": "${env.BUILD_URL}"
                            // }
                            // '''
                            // try {
                            //     sh """
                            //         curl -X POST -H 'Content-Type: application/json' -d '$payloadMsg' '$WEBHOOK_URL_DISCORD'
                            //     """
                            // } catch (Exception e) {
                            //     echo "Error notifying Approval: ${e.message}"
                            // }
                            discordSend webhookURL: "$WEBHOOK_URL_DISCORD",
                                        title: "${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
                                        result: currentBuild.currentResult.toLowerCase(),
                                        description: "Please continue fundhub-dashboard:${BUILD_NUMBER} push to Registry",
                                        enableArtifactsList: true,
                                        showChangeset: true
                        }

                        timeout(time: 30, unit: "MINUTES") {
                            approval = input message: 'Do you want to approve the push to Registry?', ok: 'Yes'

                            // Notify Discord about the push to Registry approval
                            script {
                                def approvalMessage = approval == 'Yes' ? 'Approved' : 'Rejected'
                                discordSend webhookURL: "$WEBHOOK_URL_DISCORD",
                                            title: "${env.JOB_BASE_NAME} #${env.BUILD_NUMBER}",
                                            result: currentBuild.currentResult.toLowerCase(),
                                            description: "Push to Registry approval received from ${approvalMessage}",
                                            enableArtifactsList: true,
                                            showChangeset: true
                                // def payload = '''
                                // {
                                //     "content": "Push to Registry approval received from ${approvalMessage}:white_check_mark:",
                                //     "username": "Jenkins",
                                //     "build_url": "${env.BUILD_URL}"
                                // }
                                // '''
                                // try {
                                //     sh """
                                //         curl -X POST -H 'Content-Type: application/json' -d '$payload' '$WEBHOOK_URL_DISCORD'
                                //     """
                                // } catch (Exception e) {
                                //     echo "Error notifying Approved: ${e.message}"
                                // }
                            }

                            // Continue push to Registry if approved, abort if rejected
                            script {
                                if (approval == 'Yes') {
                                    echo "Pushing to DockerHub"
                                    sh "docker login -u $DOCKER_USERNAME -p ${DOCKER_PASSWORD}"
                                    sh "docker push $DOCKER_USERNAME/fundhub-dashboard:${BUILD_NUMBER}"
                                    sh 'docker rmi $(docker images -q)'
                                } else {
                                    error "Deployment rejected. Aborting deployment."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    
    post {
        aborted {
            echo "Post Aborted"
            discordSend description: "Push Docker Image", footer: "Push image fundhub-dashboard:${BUILD_NUMBER} to Registry. Status: Aborted", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$WEBHOOK_URL_DISCORD"
        }

        success {
            echo "Post Success"
            discordSend description: "Push Docker Image", footer: "Push image fundhub-dashboard:${BUILD_NUMBER} to Registry. Status: Success", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$WEBHOOK_URL_DISCORD"
        }

        failure {
            echo "Post Failure"
            discordSend description: "Push Docker Image", footer: "Push image fundhub-dashboard:${BUILD_NUMBER} to Registry. Status: Failure", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "$WEBHOOK_URL_DISCORD"
        }
    }
}
